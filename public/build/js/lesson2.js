(self.webpackChunkheroku_web=self.webpackChunkheroku_web||[]).push([[182],{462:(t,e,r)=>{"use strict";const o=r(887);function n(t,e,r){const o=t.createShader(e);return t.shaderSource(o,r),t.compileShader(o),t.getShaderParameter(o,t.COMPILE_STATUS)?o:(alert("An error occurred compiling the shaders: "+t.getShaderInfoLog(o)),t.deleteShader(o),null)}window.onload=function(){const t=document.getElementById("glCanvas").getContext("webgl");if(null===t)return void alert("Unable to initialize WebGL. Your browser or machine may not support it.");const e=function(t,e,r){const o=n(t,t.VERTEX_SHADER,"\n        attribute vec4 aVertexPosition;\n\n        uniform mat4 uModelViewMatrix;\n        uniform mat4 uProjectionMatrix;\n\n        void main() {\n        gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n        }\n    "),a=n(t,t.FRAGMENT_SHADER,"\n        void main() {\n        gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n        }\n    "),i=t.createProgram();return t.attachShader(i,o),t.attachShader(i,a),t.linkProgram(i),t.getProgramParameter(i,t.LINK_STATUS)?i:(alert("Unable to initialize the shader program: "+t.getProgramInfoLog(i)),null)}(t),r={program:e,attribLocations:{vertexPosition:t.getAttribLocation(e,"aVertexPosition")},uniformLocations:{projectionMatrix:t.getUniformLocation(e,"uProjectionMatrix"),modelViewMatrix:t.getUniformLocation(e,"uModelViewMatrix")}},a=function(t){const e=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,e);return t.bufferData(t.ARRAY_BUFFER,new Float32Array([-1,1,1,1,-1,-1,1,-1]),t.STATIC_DRAW),{position:e}}(t);!function(t,e,r){t.clearColor(0,0,0,1),t.clearDepth(1),t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT);const n=45*Math.PI/180,a=t.canvas.width/t.canvas.height,i=o.mat4.create();o.mat4.perspective(i,n,a,.1,100);const c=o.mat4.create();o.mat4.translate(c,c,[-0,0,-6]);{const o=2,n=t.FLOAT,a=!1,i=0,c=0;t.bindBuffer(t.ARRAY_BUFFER,r.position),t.vertexAttribPointer(e.attribLocations.vertexPosition,o,n,a,i,c),t.enableVertexAttribArray(e.attribLocations.vertexPosition)}t.useProgram(e.program),t.uniformMatrix4fv(e.uniformLocations.projectionMatrix,!1,i),t.uniformMatrix4fv(e.uniformLocations.modelViewMatrix,!1,c);{const e=0,r=4;t.drawArrays(t.TRIANGLE_STRIP,e,r)}}(t,r,a)}}},0,[[462,712]]]);