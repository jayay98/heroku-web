(self.webpackChunkheroku_web=self.webpackChunkheroku_web||[]).push([[116],{152:(t,e,r)=>{"use strict";const o=r(887);let n=0,i=!1;function a(t,e,r){const o=t.createShader(e);return t.shaderSource(o,r),t.compileShader(o),t.getShaderParameter(o,t.COMPILE_STATUS)?o:(alert("An error occurred compiling the shaders: "+t.getShaderInfoLog(o)),t.deleteShader(o),null)}!function(){const t=document.getElementById("glCanvas").getContext("webgl");if(null===t)return void alert("Unable to initialize WebGL. Your browser or machine may not support it.");const e=function(t,e,r){const o=a(t,t.VERTEX_SHADER,"\n    attribute vec4 aVertexPosition;\n    attribute vec3 aVertexNormal;\n    attribute vec2 aTextureCoord;\n\n    uniform mat4 uNormalMatrix;\n    uniform mat4 uModelViewMatrix;\n    uniform mat4 uProjectionMatrix;\n\n    varying highp vec2 vTextureCoord;\n    varying highp vec3 vLighting;\n\n    void main(void) {\n      gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n      vTextureCoord = aTextureCoord;\n\n      // Apply lighting effect\n\n      highp vec3 ambientLight = vec3(0.3, 0.3, 0.3);\n      highp vec3 directionalLightColor = vec3(1, 1, 1);\n      highp vec3 directionalVector = normalize(vec3(0.85, 0.8, 0.75));\n\n      highp vec4 transformedNormal = uNormalMatrix * vec4(aVertexNormal, 1.0);\n\n      highp float directional = max(dot(transformedNormal.xyz, directionalVector), 0.0);\n      vLighting = ambientLight + (directionalLightColor * directional);\n    }\n  "),n=a(t,t.FRAGMENT_SHADER,"\n    varying highp vec2 vTextureCoord;\n    varying highp vec3 vLighting;\n\n    uniform sampler2D uSampler;\n\n    void main(void) {\n      highp vec4 texelColor = texture2D(uSampler, vTextureCoord);\n\n      gl_FragColor = vec4(texelColor.rgb * vLighting, texelColor.a);\n    }\n  "),i=t.createProgram();return t.attachShader(i,o),t.attachShader(i,n),t.linkProgram(i),t.getProgramParameter(i,t.LINK_STATUS)?i:(alert("Unable to initialize the shader program: "+t.getProgramInfoLog(i)),null)}(t),r={program:e,attribLocations:{vertexPosition:t.getAttribLocation(e,"aVertexPosition"),textureCoord:t.getAttribLocation(e,"aTextureCoord"),vertexNormal:t.getAttribLocation(e,"aVertexNormal")},uniformLocations:{projectionMatrix:t.getUniformLocation(e,"uProjectionMatrix"),modelViewMatrix:t.getUniformLocation(e,"uModelViewMatrix"),uSampler:t.getUniformLocation(e,"uSampler"),normalMatrix:t.getUniformLocation(e,"uNormalMatrix")}},c=function(t){const e=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,e),t.bufferData(t.ARRAY_BUFFER,new Float32Array([-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1]),t.STATIC_DRAW);const r=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,r),t.bufferData(t.ARRAY_BUFFER,new Float32Array([0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1]),t.STATIC_DRAW);const o=t.createBuffer();t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,o),t.bufferData(t.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]),t.STATIC_DRAW);const n=t.createBuffer();return t.bindBuffer(t.ARRAY_BUFFER,n),t.bufferData(t.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0]),t.STATIC_DRAW),{position:e,textureCoord:r,indices:o,normal:n}}(t),u=function(t){const e=t.createTexture();t.bindTexture(t.TEXTURE_2D,e);const r=t.RGBA,o=t.RGBA,n=t.UNSIGNED_BYTE,i=new Uint8Array([0,0,255,255]);return t.texImage2D(t.TEXTURE_2D,0,r,1,1,0,o,n,i),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),e}(t),l=function(t){const e=document.createElement("video");let r=!1,o=!1;function n(){r&&o&&(i=!0)}return e.autoplay=!0,e.muted=!0,e.loop=!0,e.addEventListener("playing",(()=>{r=!0,n()}),!0),e.addEventListener("timeupdate",(()=>{o=!0,n()}),!0),e.src="static/firefox.mp4",e.play(),e}();let m=0;requestAnimationFrame((function e(a){let f=a;f*=.001;const E=f-m;m=f,i&&function(t,e,r){const o=t.RGBA,n=t.RGBA,i=t.UNSIGNED_BYTE;t.bindTexture(t.TEXTURE_2D,e),t.texImage2D(t.TEXTURE_2D,0,o,n,i,r)}(t,u,l),function(t,e,r,i,a){t.clearColor(0,0,0,1),t.clearDepth(1),t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT);const c=45*Math.PI/180,u=t.canvas.width/t.canvas.height,l=o.mat4.create();o.mat4.perspective(l,c,u,.1,100);const m=o.mat4.create();o.mat4.translate(m,m,[-0,0,-6]),o.mat4.rotate(m,m,n,[.8,1,1.2]);const f=o.mat4.create();o.mat4.invert(f,m),o.mat4.transpose(f,f);{const o=3,n=t.FLOAT,i=!1,a=0,c=0;t.bindBuffer(t.ARRAY_BUFFER,r.position),t.vertexAttribPointer(e.attribLocations.vertexPosition,o,n,i,a,c),t.enableVertexAttribArray(e.attribLocations.vertexPosition)}{const o=2,n=t.FLOAT,i=!1,a=0,c=0;t.bindBuffer(t.ARRAY_BUFFER,r.textureCoord),t.vertexAttribPointer(e.attribLocations.textureCoord,o,n,i,a,c),t.enableVertexAttribArray(e.attribLocations.textureCoord)}t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,a),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,r.indices),t.useProgram(e.program),t.uniform1i(e.uniformLocations.uSampler,0),t.uniformMatrix4fv(e.uniformLocations.projectionMatrix,!1,l),t.uniformMatrix4fv(e.uniformLocations.modelViewMatrix,!1,m),t.uniformMatrix4fv(e.uniformLocations.normalMatrix,!1,f);{const e=0,r=36,o=t.UNSIGNED_SHORT;t.drawElements(t.TRIANGLES,r,o,e)}{const o=3,n=t.FLOAT,i=!1,a=0,c=0;t.bindBuffer(t.ARRAY_BUFFER,r.normal),t.vertexAttribPointer(e.attribLocations.vertexNormal,o,n,i,a,c),t.enableVertexAttribArray(e.attribLocations.vertexNormal)}n+=i}(t,r,c,E,u),requestAnimationFrame(e)}))}()}},0,[[152,712]]]);