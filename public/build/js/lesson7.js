(self.webpackChunkheroku_web=self.webpackChunkheroku_web||[]).push([[675],{706:(e,t,r)=>{"use strict";const o=r(887);let n=0;function a(e,t,r){const o=e.createShader(t);return e.shaderSource(o,r),e.compileShader(o),e.getShaderParameter(o,e.COMPILE_STATUS)?o:(alert("An error occurred compiling the shaders: "+e.getShaderInfoLog(o)),e.deleteShader(o),null)}function i(e){return 0==(e&e-1)}!function(){const e=document.getElementById("glCanvas").getContext("webgl");if(null===e)return void alert("Unable to initialize WebGL. Your browser or machine may not support it.");const t=function(e,t,r){const o=a(e,e.VERTEX_SHADER,"\n    attribute vec4 aVertexPosition;\n    attribute vec3 aVertexNormal;\n    attribute vec2 aTextureCoord;\n\n    uniform mat4 uNormalMatrix;\n    uniform mat4 uModelViewMatrix;\n    uniform mat4 uProjectionMatrix;\n\n    varying highp vec2 vTextureCoord;\n    varying highp vec3 vLighting;\n\n    void main(void) {\n      gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n      vTextureCoord = aTextureCoord;\n\n      // Apply lighting effect\n\n      highp vec3 ambientLight = vec3(0.3, 0.3, 0.3);\n      highp vec3 directionalLightColor = vec3(1, 1, 1);\n      highp vec3 directionalVector = normalize(vec3(0.85, 0.8, 0.75));\n\n      highp vec4 transformedNormal = uNormalMatrix * vec4(aVertexNormal, 1.0);\n\n      highp float directional = max(dot(transformedNormal.xyz, directionalVector), 0.0);\n      vLighting = ambientLight + (directionalLightColor * directional);\n    }\n  "),n=a(e,e.FRAGMENT_SHADER,"\n    varying highp vec2 vTextureCoord;\n    varying highp vec3 vLighting;\n\n    uniform sampler2D uSampler;\n\n    void main(void) {\n      highp vec4 texelColor = texture2D(uSampler, vTextureCoord);\n\n      gl_FragColor = vec4(texelColor.rgb * vLighting, texelColor.a);\n    }\n  "),i=e.createProgram();return e.attachShader(i,o),e.attachShader(i,n),e.linkProgram(i),e.getProgramParameter(i,e.LINK_STATUS)?i:(alert("Unable to initialize the shader program: "+e.getProgramInfoLog(i)),null)}(e),r={program:t,attribLocations:{vertexPosition:e.getAttribLocation(t,"aVertexPosition"),textureCoord:e.getAttribLocation(t,"aTextureCoord"),vertexNormal:e.getAttribLocation(t,"aVertexNormal")},uniformLocations:{projectionMatrix:e.getUniformLocation(t,"uProjectionMatrix"),modelViewMatrix:e.getUniformLocation(t,"uModelViewMatrix"),uSampler:e.getUniformLocation(t,"uSampler"),normalMatrix:e.getUniformLocation(t,"uNormalMatrix")}},c=function(e){const t=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,new Float32Array([-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1]),e.STATIC_DRAW);const r=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,r),e.bufferData(e.ARRAY_BUFFER,new Float32Array([0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1]),e.STATIC_DRAW);const o=e.createBuffer();e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,o),e.bufferData(e.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]),e.STATIC_DRAW);const n=e.createBuffer();return e.bindBuffer(e.ARRAY_BUFFER,n),e.bufferData(e.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0]),e.STATIC_DRAW),{position:t,textureCoord:r,indices:o,normal:n}}(e),u=function(e,t){const r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const o=e.RGBA,n=e.RGBA,a=e.UNSIGNED_BYTE,c=new Uint8Array([0,0,255,255]);e.texImage2D(e.TEXTURE_2D,0,o,1,1,0,n,a,c);const u=new Image;return u.onload=()=>{e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,o,n,a,u),i(u.width)&&i(u.height)?e.generateMipmap(e.TEXTURE_2D):(e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR))},u.src="static/cubetexture.png",r}(e);let m=0;requestAnimationFrame((function t(a){let i=a;i*=.001;const l=i-m;m=i,function(e,t,r,a,i){e.clearColor(0,0,0,1),e.clearDepth(1),e.enable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT);const c=45*Math.PI/180,u=e.canvas.width/e.canvas.height,m=o.mat4.create();o.mat4.perspective(m,c,u,.1,100);const l=o.mat4.create();o.mat4.translate(l,l,[-0,0,-6]),o.mat4.rotate(l,l,n,[.8,1,1.2]);const E=o.mat4.create();o.mat4.invert(E,l),o.mat4.transpose(E,E);{const o=3,n=e.FLOAT,a=!1,i=0,c=0;e.bindBuffer(e.ARRAY_BUFFER,r.position),e.vertexAttribPointer(t.attribLocations.vertexPosition,o,n,a,i,c),e.enableVertexAttribArray(t.attribLocations.vertexPosition)}{const o=2,n=e.FLOAT,a=!1,i=0,c=0;e.bindBuffer(e.ARRAY_BUFFER,r.textureCoord),e.vertexAttribPointer(t.attribLocations.textureCoord,o,n,a,i,c),e.enableVertexAttribArray(t.attribLocations.textureCoord)}e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,i),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,r.indices),e.useProgram(t.program),e.uniform1i(t.uniformLocations.uSampler,0),e.uniformMatrix4fv(t.uniformLocations.projectionMatrix,!1,m),e.uniformMatrix4fv(t.uniformLocations.modelViewMatrix,!1,l),e.uniformMatrix4fv(t.uniformLocations.normalMatrix,!1,E);{const t=0,r=36,o=e.UNSIGNED_SHORT;e.drawElements(e.TRIANGLES,r,o,t)}{const o=3,n=e.FLOAT,a=!1,i=0,c=0;e.bindBuffer(e.ARRAY_BUFFER,r.normal),e.vertexAttribPointer(t.attribLocations.vertexNormal,o,n,a,i,c),e.enableVertexAttribArray(t.attribLocations.vertexNormal)}n+=a}(e,r,c,l,u),requestAnimationFrame(t)}))}()}},0,[[706,712]]]);